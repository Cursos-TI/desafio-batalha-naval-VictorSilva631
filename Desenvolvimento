#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define TAMANHO 10

void inicializarMatriz(int matriz[TAMANHO][TAMANHO]) {
    for (int i = 0; i < TAMANHO; i++)
        for (int j = 0; j < TAMANHO; j++)
            matriz[i][j] = 0;
}

void exibirMatriz(int matriz[TAMANHO][TAMANHO], const char* titulo) {
    printf("\n%s\n\n   ", titulo);
    for (int i = 0; i < TAMANHO; i++) printf("%d ", i);
    printf("\n");
    for (int i = 0; i < TAMANHO; i++) {
        printf("%2d ", i);
        for (int j = 0; j < TAMANHO; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }
}

// Habilidade: Cruz centrada em (x,y)
void habilidadeCruz(int matriz[TAMANHO][TAMANHO], int x, int y, int alcance) {
    for (int i = -alcance; i <= alcance; i++) {
        if (x + i >= 0 && x + i < TAMANHO)
            matriz[x + i][y] = 1;
        if (y + i >= 0 && y + i < TAMANHO)
            matriz[x][y + i] = 1;
    }
}

// Habilidade: Cone para baixo a partir de (x,y)
void habilidadeCone(int matriz[TAMANHO][TAMANHO], int x, int y, int altura) {
    for (int i = 0; i < altura; i++) {
        for (int j = -i; j <= i; j++) {
            int nx = x + i;
            int ny = y + j;
            if (nx >= 0 && nx < TAMANHO && ny >= 0 && ny < TAMANHO)
                matriz[nx][ny] = 1;
        }
    }
}

// Habilidade: Octaedro (ou losango 2D) em torno de (x,y)
void habilidadeOctaedro(int matriz[TAMANHO][TAMANHO], int x, int y, int raio) {
    for (int dx = -raio; dx <= raio; dx++) {
        for (int dy = -raio; dy <= raio; dy++) {
            if (abs(dx) + abs(dy) <= raio) {
                int nx = x + dx;
                int ny = y + dy;
                if (nx >= 0 && nx < TAMANHO && ny >= 0 && ny < TAMANHO)
                    matriz[nx][ny] = 1;
            }
        }
    }
}

int main() {
    int cone[TAMANHO][TAMANHO];
    int cruz[TAMANHO][TAMANHO];
    int octaedro[TAMANHO][TAMANHO];

    // Inicialização
    inicializarMatriz(cone);
    inicializarMatriz(cruz);
    inicializarMatriz(octaedro);

    // Aplicando habilidades
    habilidadeCone(cone, 2, 5, 4);         // Cone para baixo
    habilidadeCruz(cruz, 5, 5, 3);         // Cruz com alcance 3
    habilidadeOctaedro(octaedro, 7, 3, 3); // Octaedro centrado em (7,3)

    // Exibir matrizes
    exibirMatriz(cone, "Área de habilidade: Cone");
    exibirMatriz(cruz, "Área de habilidade: Cruz");
    exibirMatriz(octaedro, "Área de habilidade: Octaedro");

    return 0;
}
